// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<TouchableWithoutFeedback /> should render as expected 1`] = `
<Text
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  Touchable
</Text>
`;

exports[`<TouchableWithoutFeedback disabled={true} /> should be disabled when disabled is true 1`] = `
<Text
  accessibilityState={
    Object {
      "disabled": true,
    }
  }
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  Touchable
</Text>
`;

exports[`<TouchableWithoutFeedback disabled={true} accessibilityState={{}} /> should be disabled when disabled is true and accessibilityState is empty 1`] = `
<Text
  accessibilityState={Object {}}
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  Touchable
</Text>
`;

exports[`<TouchableWithoutFeedback disabled={true} accessibilityState={{checked: true}} /> should keep accessibilityState when disabled is true 1`] = `
<Text
  accessibilityState={
    Object {
      "checked": true,
    }
  }
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  Touchable
</Text>
`;

exports[`<TouchableWithoutFeedback disabled={true} accessibilityState={{disabled: false}} /> should overwrite accessibilityState with value of disabled prop 1`] = `
<Text
  accessibilityState={
    Object {
      "disabled": false,
    }
  }
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
>
  Touchable
</Text>
`;

exports[`TouchableHighlight renders correctly 1`] = `
<View
  accessible={true}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={Object {}}
>
  <Text>
    Touchable
  </Text>
</View>
`;
